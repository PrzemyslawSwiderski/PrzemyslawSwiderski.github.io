"use strict";(this.webpackChunkpswidersk_page=this.webpackChunkpswidersk_page||[]).push([[2347],{2347:e=>{e.exports="(function (root, factory) {\n  if (typeof define === 'function' && define.amd)\n    define(['exports', './kotlin-kotlin-stdlib.js'], factory);\n  else if (typeof exports === 'object')\n    factory(module.exports, require('./kotlin-kotlin-stdlib.js'));\n  else {\n    if (typeof this['kotlin-kotlin-stdlib'] === 'undefined') {\n      throw new Error(\"Error loading module 'kotlin-web'. Its dependency 'kotlin-kotlin-stdlib' was not found. Please, check whether 'kotlin-kotlin-stdlib' is loaded prior to 'kotlin-web'.\");\n    }\n    root['kotlin-web'] = factory(typeof this['kotlin-web'] === 'undefined' ? {} : this['kotlin-web'], this['kotlin-kotlin-stdlib']);\n  }\n}(globalThis, function (_, kotlin_kotlin) {\n  'use strict';\n  //region block: imports\n  var VOID = kotlin_kotlin.$_$.f;\n  var Unit_instance = kotlin_kotlin.$_$.t3;\n  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.j;\n  var sequenceOf = kotlin_kotlin.$_$.b9;\n  //endregion\n  //region block: pre-declaration\n  //endregion\n  function copy(_this__u8e3s4, signal) {\n    signal = signal === VOID ? VOID : signal;\n    return Object.assign({}, _this__u8e3s4, {signal: signal});\n  }\n  function invoke(_this__u8e3s4, signal) {\n    signal = signal === VOID ? VOID : signal;\n    return {signal: signal};\n  }\n  function copy_0(_this__u8e3s4, endings, type) {\n    endings = endings === VOID ? VOID : endings;\n    type = type === VOID ? VOID : type;\n    return Object.assign({}, _this__u8e3s4, {endings: endings, type: type});\n  }\n  function invoke_0(_this__u8e3s4, endings, type) {\n    endings = endings === VOID ? VOID : endings;\n    type = type === VOID ? VOID : type;\n    return {endings: endings, type: type};\n  }\n  function copy_1(_this__u8e3s4, capture, signal, once, signal_0, passive) {\n    capture = capture === VOID ? VOID : capture;\n    signal = signal === VOID ? VOID : signal;\n    once = once === VOID ? VOID : once;\n    signal_0 = signal_0 === VOID ? VOID : signal_0;\n    passive = passive === VOID ? VOID : passive;\n    return Object.assign({}, _this__u8e3s4, {capture: capture, signal: signal_0, once: once, signal: signal_0, passive: passive});\n  }\n  function invoke_1(_this__u8e3s4, capture, signal, once, signal_0, passive) {\n    capture = capture === VOID ? VOID : capture;\n    signal = signal === VOID ? VOID : signal;\n    once = once === VOID ? VOID : once;\n    signal_0 = signal_0 === VOID ? VOID : signal_0;\n    passive = passive === VOID ? VOID : passive;\n    return {capture: capture, signal: signal_0, once: once, signal: signal_0, passive: passive};\n  }\n  function copy_2(_this__u8e3s4, bubbles, cancelable, composed) {\n    bubbles = bubbles === VOID ? VOID : bubbles;\n    cancelable = cancelable === VOID ? VOID : cancelable;\n    composed = composed === VOID ? VOID : composed;\n    return Object.assign({}, _this__u8e3s4, {bubbles: bubbles, cancelable: cancelable, composed: composed});\n  }\n  function invoke_2(_this__u8e3s4, bubbles, cancelable, composed) {\n    bubbles = bubbles === VOID ? VOID : bubbles;\n    cancelable = cancelable === VOID ? VOID : cancelable;\n    composed = composed === VOID ? VOID : composed;\n    return {bubbles: bubbles, cancelable: cancelable, composed: composed};\n  }\n  function copy_3(_this__u8e3s4, capture) {\n    capture = capture === VOID ? VOID : capture;\n    return Object.assign({}, _this__u8e3s4, {capture: capture});\n  }\n  function invoke_3(_this__u8e3s4, capture) {\n    capture = capture === VOID ? VOID : capture;\n    return {capture: capture};\n  }\n  function addEventHandler(_this__u8e3s4, type, handler) {\n    return addEventHandler_0(_this__u8e3s4, type, undefined, handler);\n  }\n  function addEventHandler_0(_this__u8e3s4, type, options, handler) {\n    _this__u8e3s4.addEventListener(type, handler, options);\n    return addEventHandler$lambda(_this__u8e3s4, type, handler, options);\n  }\n  function addEventHandler$lambda($this_addEventHandler, $type, $handler, $options) {\n    return function () {\n      $this_addEventHandler.removeEventListener($type, $handler, $options);\n      return Unit_instance;\n    };\n  }\n  function copy_4(_this__u8e3s4, bubbles, cancelable, composed, total, loaded, lengthComputable) {\n    bubbles = bubbles === VOID ? VOID : bubbles;\n    cancelable = cancelable === VOID ? VOID : cancelable;\n    composed = composed === VOID ? VOID : composed;\n    total = total === VOID ? VOID : total;\n    loaded = loaded === VOID ? VOID : loaded;\n    lengthComputable = lengthComputable === VOID ? VOID : lengthComputable;\n    return Object.assign({}, _this__u8e3s4, {bubbles: bubbles, cancelable: cancelable, composed: composed, total: total, loaded: loaded, lengthComputable: lengthComputable});\n  }\n  function invoke_4(_this__u8e3s4, bubbles, cancelable, composed, total, loaded, lengthComputable) {\n    bubbles = bubbles === VOID ? VOID : bubbles;\n    cancelable = cancelable === VOID ? VOID : cancelable;\n    composed = composed === VOID ? VOID : composed;\n    total = total === VOID ? VOID : total;\n    loaded = loaded === VOID ? VOID : loaded;\n    lengthComputable = lengthComputable === VOID ? VOID : lengthComputable;\n    return {bubbles: bubbles, cancelable: cancelable, composed: composed, total: total, loaded: loaded, lengthComputable: lengthComputable};\n  }\n  function copy_5(_this__u8e3s4, endings, type, lastModified) {\n    endings = endings === VOID ? VOID : endings;\n    type = type === VOID ? VOID : type;\n    lastModified = lastModified === VOID ? VOID : lastModified;\n    return Object.assign({}, _this__u8e3s4, {endings: endings, type: type, lastModified: lastModified});\n  }\n  function invoke_5(_this__u8e3s4, endings, type, lastModified) {\n    endings = endings === VOID ? VOID : endings;\n    type = type === VOID ? VOID : type;\n    lastModified = lastModified === VOID ? VOID : lastModified;\n    return {endings: endings, type: type, lastModified: lastModified};\n  }\n  function copy_6(_this__u8e3s4, signal, referrer, signal_0, body, redirect, cache, method, integrity, mode, credentials, keepalive, priority, headers, referrerPolicy) {\n    signal = signal === VOID ? VOID : signal;\n    referrer = referrer === VOID ? VOID : referrer;\n    signal_0 = signal_0 === VOID ? VOID : signal_0;\n    body = body === VOID ? VOID : body;\n    redirect = redirect === VOID ? VOID : redirect;\n    cache = cache === VOID ? VOID : cache;\n    method = method === VOID ? VOID : method;\n    integrity = integrity === VOID ? VOID : integrity;\n    mode = mode === VOID ? VOID : mode;\n    credentials = credentials === VOID ? VOID : credentials;\n    keepalive = keepalive === VOID ? VOID : keepalive;\n    priority = priority === VOID ? VOID : priority;\n    headers = headers === VOID ? VOID : headers;\n    referrerPolicy = referrerPolicy === VOID ? VOID : referrerPolicy;\n    return Object.assign({}, _this__u8e3s4, {signal: signal_0, referrer: referrer, signal: signal_0, body: body, redirect: redirect, cache: cache, method: method, integrity: integrity, mode: mode, credentials: credentials, keepalive: keepalive, priority: priority, headers: headers, referrerPolicy: referrerPolicy});\n  }\n  function invoke_6(_this__u8e3s4, signal, referrer, signal_0, body, redirect, cache, method, integrity, mode, credentials, keepalive, priority, headers, referrerPolicy) {\n    signal = signal === VOID ? VOID : signal;\n    referrer = referrer === VOID ? VOID : referrer;\n    signal_0 = signal_0 === VOID ? VOID : signal_0;\n    body = body === VOID ? VOID : body;\n    redirect = redirect === VOID ? VOID : redirect;\n    cache = cache === VOID ? VOID : cache;\n    method = method === VOID ? VOID : method;\n    integrity = integrity === VOID ? VOID : integrity;\n    mode = mode === VOID ? VOID : mode;\n    credentials = credentials === VOID ? VOID : credentials;\n    keepalive = keepalive === VOID ? VOID : keepalive;\n    priority = priority === VOID ? VOID : priority;\n    headers = headers === VOID ? VOID : headers;\n    referrerPolicy = referrerPolicy === VOID ? VOID : referrerPolicy;\n    return {signal: signal_0, referrer: referrer, signal: signal_0, body: body, redirect: redirect, cache: cache, method: method, integrity: integrity, mode: mode, credentials: credentials, keepalive: keepalive, priority: priority, headers: headers, referrerPolicy: referrerPolicy};\n  }\n  function copy_7(_this__u8e3s4, status, headers, statusText) {\n    status = status === VOID ? VOID : status;\n    headers = headers === VOID ? VOID : headers;\n    statusText = statusText === VOID ? VOID : statusText;\n    return Object.assign({}, _this__u8e3s4, {status: status, headers: headers, statusText: statusText});\n  }\n  function invoke_7(_this__u8e3s4, status, headers, statusText) {\n    status = status === VOID ? VOID : status;\n    headers = headers === VOID ? VOID : headers;\n    statusText = statusText === VOID ? VOID : statusText;\n    return {status: status, headers: headers, statusText: statusText};\n  }\n  function copy_8(_this__u8e3s4, bubbles, cancelable, composed, promise, reason) {\n    bubbles = bubbles === VOID ? VOID : bubbles;\n    cancelable = cancelable === VOID ? VOID : cancelable;\n    composed = composed === VOID ? VOID : composed;\n    promise = promise === VOID ? VOID : promise;\n    reason = reason === VOID ? VOID : reason;\n    return Object.assign({}, _this__u8e3s4, {bubbles: bubbles, cancelable: cancelable, composed: composed, promise: promise, reason: reason});\n  }\n  function invoke_8(_this__u8e3s4, bubbles, cancelable, composed, promise, reason) {\n    bubbles = bubbles === VOID ? VOID : bubbles;\n    cancelable = cancelable === VOID ? VOID : cancelable;\n    composed = composed === VOID ? VOID : composed;\n    reason = reason === VOID ? VOID : reason;\n    return {bubbles: bubbles, cancelable: cancelable, composed: composed, promise: promise, reason: reason};\n  }\n  function copy_9(_this__u8e3s4, transfer) {\n    transfer = transfer === VOID ? VOID : transfer;\n    return Object.assign({}, _this__u8e3s4, {transfer: transfer});\n  }\n  function invoke_9(_this__u8e3s4, transfer) {\n    transfer = transfer === VOID ? VOID : transfer;\n    return {transfer: transfer};\n  }\n  function copy_10(_this__u8e3s4, mode) {\n    mode = mode === VOID ? VOID : mode;\n    return Object.assign({}, _this__u8e3s4, {mode: mode});\n  }\n  function invoke_10(_this__u8e3s4, mode) {\n    mode = mode === VOID ? VOID : mode;\n    return {mode: mode};\n  }\n  function copy_11(_this__u8e3s4, signal, signal_0, preventCancel, preventClose, preventAbort) {\n    signal = signal === VOID ? VOID : signal;\n    signal_0 = signal_0 === VOID ? VOID : signal_0;\n    preventCancel = preventCancel === VOID ? VOID : preventCancel;\n    preventClose = preventClose === VOID ? VOID : preventClose;\n    preventAbort = preventAbort === VOID ? VOID : preventAbort;\n    return Object.assign({}, _this__u8e3s4, {signal: signal_0, signal: signal_0, preventCancel: preventCancel, preventClose: preventClose, preventAbort: preventAbort});\n  }\n  function invoke_11(_this__u8e3s4, signal, signal_0, preventCancel, preventClose, preventAbort) {\n    signal = signal === VOID ? VOID : signal;\n    signal_0 = signal_0 === VOID ? VOID : signal_0;\n    preventCancel = preventCancel === VOID ? VOID : preventCancel;\n    preventClose = preventClose === VOID ? VOID : preventClose;\n    preventAbort = preventAbort === VOID ? VOID : preventAbort;\n    return {signal: signal_0, signal: signal_0, preventCancel: preventCancel, preventClose: preventClose, preventAbort: preventAbort};\n  }\n  function safeAny(signal1, signal2) {\n    if (signal1 == null)\n      return signal2;\n    if (signal1.aborted)\n      return signal1;\n    if (signal2.aborted)\n      return signal2;\n    var controller = new AbortController();\n    // Inline function 'kotlin.collections.mutableListOf' call\n    var handlers = ArrayList_init_$Create$();\n    // Inline function 'web.events.EventHandler' call\n    // Inline function 'kotlin.js.unsafeCast' call\n    // Inline function 'kotlin.js.asDynamic' call\n    var abortHandler = safeAny$lambda(handlers, controller);\n    // Inline function 'kotlin.sequences.mapTo' call\n    var tmp0_iterator = sequenceOf([signal1, signal2]).h();\n    while (tmp0_iterator.i()) {\n      var item = tmp0_iterator.j();\n      // Inline function 'web.abort.internal.safeAny.<anonymous>' call\n      // Inline function 'web.events.EventTypes.abort' call\n      var tmp$ret$5 = addEventHandler(item, 'abort', abortHandler);\n      handlers.e(tmp$ret$5);\n    }\n    return controller.signal;\n  }\n  function safeAny$lambda($handlers, $controller) {\n    return function (event) {\n      var tmp0_iterator = $handlers.h();\n      while (tmp0_iterator.i()) {\n        var element = tmp0_iterator.j();\n        // Inline function 'web.abort.internal.safeAny.<anonymous>.<anonymous>' call\n        element();\n      }\n      $controller.abort(event.currentTarget.reason);\n      return Unit_instance;\n    };\n  }\n  function patchAbortOptions(options, controller) {\n    // Inline function 'js.objects.jso' call\n    // Inline function 'kotlin.apply' call\n    // Inline function 'js.objects.jso' call\n    var this_0 = {};\n    // Inline function 'kotlin.contracts.contract' call\n    // Inline function 'web.abort.internal.patchAbortOptions.<anonymous>' call\n    this_0.signal = safeAny(options == null ? null : options.signal, controller.signal);\n    var abortOptions = this_0;\n    var tmp = Object;\n    // Inline function 'js.objects.jso' call\n    var tmp$ret$3 = {};\n    return tmp.assign(tmp$ret$3, options, abortOptions);\n  }\n  function awaitPromiseLike$lambda($controller) {\n    return function (it) {\n      $controller.abort();\n      return Unit_instance;\n    };\n  }\n  return _;\n}));\n\n"}}]);